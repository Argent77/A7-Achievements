// Blank file for general use
<<<<<<<< .../inlined/A7-Achievements/blank
>>>>>>>>

// Returns an indexed array of games.
DEFINE_ACTION_FUNCTION SPLIT_GAMES
STR_VAR games = ~~
RET game_list
RET_ARRAY game_list
BEGIN
  OUTER_SET game_list = 0
  ACTION_CLEAR_ARRAY ~game_list~

  OUTER_PATCH ~%games%~ BEGIN
    REPLACE_EVALUATE
      ~\([^ %TAB%%WNL%]+\)~
      BEGIN
        TEXT_SPRINT $game_list(~%game_list%~) ~%MATCH1%~
        SET game_list += 1
      END
      ~~
  END
END


// Returns a valid variable name based on the specified parameters. Returns empty name if global is not available.
DEFINE_DIMORPHIC_FUNCTION FORMAT_GLOBAL
STR_VAR
  global = ~~ // name of the global variable
  game   = ~~ // may be blank
RET
  global  // resulting variable name, or empty if not available
BEGIN
  ACTION_IF (NOT ~%global%~ STR_EQ ~~) BEGIN
    ACTION_IF (GAME_IS ~eet~) BEGIN
      ACTION_TO_LOWER ~game~
      ACTION_MATCH ~%game%~ WITH
        ~bgee~  BEGIN OUTER_TEXT_SPRINT suffix ~_BG1~ END
        ~sod~   BEGIN OUTER_TEXT_SPRINT suffix ~_SOD~ END
        ~iwdee~ BEGIN OUTER_TEXT_SPRINT suffix ~_IWD~ END
        DEFAULT       OUTER_TEXT_SPRINT suffix ~~
      END
    END ELSE BEGIN
      OUTER_TEXT_SPRINT suffix ~~
    END

    OUTER_SET len_diff = (STRING_LENGTH ~%global%%suffix%~) - 32
    ACTION_IF (len_diff > 0) BEGIN
      LAF SUBSTRING
        INT_VAR
          start = 0
          length = STRING_LENGTH ~%global%~ - len_diff
        STR_VAR
          string = EVAL ~%global%~
        RET
          global = substring
      END
    END
    OUTER_TEXT_SPRINT global ~%global%%suffix%~

    ACTION_IF (NOT ~%suffix%~ STR_EQ ~~ &&
               NOT FILE_CONTAINS_EVALUATED(~%MOD_FOLDER%/scripts/achievem-eet.baf~ ~"%global%"~)) BEGIN
      OUTER_TEXT_SPRINT global ~~
    END
  END
END


// Creates a properly formatted journal entry title and content.
DEFINE_PATCH_FUNCTION CREATE_JOURNAL_ENTRY
INT_VAR
  tra_ref = "-1"  // tra reference of achievement name
RET
  title_strref    // strref of the journal title
  content_strref  // strref of the formatted journal text
  heading_strref  // strref of the achievement title
BEGIN
  SET title_strref = "-1"
  SET content_strref = "-1"
  SET heading_strref = "-1"

  PATCH_IF (tra_ref >= 0) BEGIN
    SET heading_ref = tra_ref
    SET body_ref = heading_ref + 1

    SPRINT title_text @500
    SPRINT heading_text (AT ~heading_ref~)
    SPRINT body_text (AT ~body_ref~)
    PATCH_IF (GAME_IS ~bg2ee eet iwdee~) BEGIN
      SET title_strref = RESOLVE_STR_REF(~%title_text%~)
      TEXT_SPRINT entry_text ~%heading_text%%LNL%%LNL%%body_text%~
    END ELSE PATCH_IF (GAME_IS ~pstee~) BEGIN
      SET title_strref = RESOLVE_STR_REF(~%title_text% (%heading_text%)~)
      TEXT_SPRINT entry_text ~%body_text%~
    END ELSE BEGIN
      SET title_strref = RESOLVE_STR_REF(~%title_text%~)
      TEXT_SPRINT entry_text ~%title_text%%LNL%%LNL%%heading_text%%LNL%%LNL%%body_text%~
    END
    SET heading_strref = RESOLVE_STR_REF(~%heading_text%~)

    SET content_strref = RESOLVE_STR_REF(~%entry_text%~)
  END
END


// Retrieves a list of achievement definitions for the specified games.
DEFINE_ACTION_FUNCTION COLLECT_ACHIEVEMENTS
STR_VAR
  games = ~~
RET
  achievements    // number of stored elements in achievements array
  journal_titles  // number of stored elements in journal_titles array
  achievement_labels  // number of stored elements in achievement_labels array
RET_ARRAY
  achievements    // associative array: name_of_global => journal_strref
  journal_titles  // associative array: name_of_global => title_strref
  achievement_labels  // associative array: name_of_global => achievement_label_strref
BEGIN
  OUTER_SET achievements = 0
  OUTER_SET journal_titles = 0
  OUTER_SET achievement_labels = 0
  ACTION_CLEAR_ARRAY ~achievements~
  ACTION_CLEAR_ARRAY ~journal_titles~
  ACTION_CLEAR_ARRAY ~achievement_labels~

  // preparations
  LAF SPLIT_GAMES STR_VAR games RET game_list RET_ARRAY game_list END

  COPY ~%MOD_FOLDER%/tables/achievements.2da~ ~%MOD_FOLDER%/tables/achievements.2da~
    READ_2DA_ENTRIES_NOW table 1
    READ_2DA_ENTRY_FORMER table 1 0 def_value

    // Wildcards are supported
    TEXT_SPRINT $game_list(~%game_list%~) ~%def_value%~
    SET game_list += 1

    FOR (i = 0; i < game_list; ++i) BEGIN
      TEXT_SPRINT game $game_list(~%i%~)
      FOR (row = 3; row < table; ++row) BEGIN
        READ_2DA_ENTRY_FORMER table row 1 col_game
        PATCH_IF (~%col_game%~ STR_EQ ~%game%~) BEGIN
          READ_2DA_ENTRY_FORMER table row 2 row_global
          READ_2DA_ENTRY_FORMER table row 3 row_tra
          PATCH_IF (NOT ~%row_global%~ STR_EQ ~%def_value%~ && IS_AN_INT ~row_tra~) BEGIN
            LPF FORMAT_GLOBAL STR_VAR global = EVAL ~%row_global%~ game RET global END
            PATCH_IF (NOT ~%global%~ STR_EQ ~~ && NOT VARIABLE_IS_SET $achievements(~%global%~)) BEGIN
              LPF CREATE_JOURNAL_ENTRY INT_VAR tra_ref = row_tra RET title_strref content_strref heading_strref END
              SET $achievements(~%global%~) = content_strref
              SET achievements += 1
              SET $journal_titles(~%global%~) = title_strref
              SET journal_titles += 1
              SET $achievement_labels(~%global%~) = heading_strref
              SET achievement_labels += 1
            END
          END
        END
      END
    END
  BUT_ONLY
END


// Patches the global game scripts to execute the achievement checks in regular intervals
DEFINE_ACTION_FUNCTION PATCH_GAME_SCRIPTS
INT_VAR
  ach_count = 0 // number of tokens to add
  prefer_achievements = 0 // whether ACHIEVEM.BCS should be patched if available
BEGIN
  // Preparations
  OUTER_SET ach_count_total = ach_count
  OUTER_SET strref = RESOLVE_STR_REF(@510)
  ACTION_IF (GAME_IS ~pstee~) BEGIN
    OUTER_TEXT_SPRINT display_string ~DisplayStringNoNameHead(Player1,%strref%)~
  END ELSE BEGIN
    OUTER_TEXT_SPRINT display_string ~DisplayStringNoName(Myself,%strref%)~
  END

  // Collecting available global game scripts
  ACTION_CLEAR_ARRAY ~scripts~
  OUTER_SET script_set = 0

  ACTION_IF (prefer_achievements && FILE_EXISTS_IN_GAME ~ACHIEVEM.BCS~) BEGIN
    // using special achievement script
    OUTER_SET $scripts(~ACHIEVEM~) = 1
    OUTER_SET script_set = 1
  END

  ACTION_IF (script_set = 0) BEGIN
    // falling back to regular global scripts
    OUTER_SET $scripts(~BALDUR~) = 1
    ACTION_IF (FILE_EXISTS_IN_GAME ~BALDUR25.BCS~) BEGIN
      OUTER_SET $scripts(~BALDUR25~) = 1
    END
    COPY_EXISTING ~campaign.2da~ ~override~
      READ_2DA_ENTRIES_NOW campaign 1
      FOR (row = 3; row < campaign; ++row) BEGIN
        READ_2DA_ENTRY_FORMER campaign row 1 resref
        TO_UPPER ~resref~
        PATCH_IF (NOT VARIABLE_IS_SET $scripts(~%resref%~)) BEGIN
          SET $scripts(~%resref%~) = 1
        END
      END
    BUT_ONLY IF_EXISTS
  END

  // Patching global scripts
  ACTION_PHP_EACH scripts AS resref => _ BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resref%.BCS~ &&
               NOT FILE_CONTAINS_EVALUATED (~%resref%.BCS~ ~A7-ACHIEVEMENTS-TIMER~)) BEGIN
      ACTION_IF (GAME_IS ~pstee~) BEGIN
        EXTEND_TOP ~%resref%.BCS~ ~%MOD_FOLDER%/scripts/a7-global-achv-call-pstee.baf~ EVAL
      END ELSE BEGIN
        EXTEND_TOP ~%resref%.BCS~ ~%MOD_FOLDER%/scripts/a7-global-achv-call.baf~ EVAL
      END
    END
  END
END


// Adds a journal trigger command to the bgee.lua file. (PSTEE only)
DEFINE_PATCH_FUNCTION ADD_JOURNAL_TRIGGER
INT_VAR
  strref  = "-1"  // strref of journal entry
  done    = 1     // boolean: whether quest is marked as completed
STR_VAR
  global  = ~~    // name of global to check for nonzero
BEGIN
  PATCH_IF (GAME_IS ~pstee~ && strref >= 0 && NOT ~%global%~ STR_EQ ~~) BEGIN
    PATCH_IF (done) BEGIN
      TEXT_SPRINT journal ~setEntryDone~
    END ELSE BEGIN
      TEXT_SPRINT journal ~setEntryActive~
    END
    TEXT_SPRINT ws ~ %TAB%~
    TEXT_SPRINT op "~=<>"
    TEXT_SPRINT num ~-?[0-9]+~
    // finding last existing journal trigger
    SET pos = RINDEX_BUFFER(~if[%ws%]*([%ws%]*sv[%ws%]*([%ws%]*"[^"]*"[%ws%]*)[%ws%]*[%op%]+[%ws%]*%num%~ BUFFER_LENGTH)
    PATCH_IF (pos >= 0) BEGIN
      SET pos = INDEX_BUFFER(~%LNL%~ pos)
      PATCH_IF (pos >= 0) BEGIN
        // adding new journal trigger
        SET pos += 1
        TEXT_SPRINT line ~%TAB%if( sv("%global%") > 0 ) then %journal%(%strref%) end%WNL%~
        SET strlen = STRING_LENGTH ~%line%~
        INSERT_BYTES pos strlen
        WRITE_ASCIIE pos ~%line%~ (strlen)
      END
    END
  END
END


// Installs the "Achievements Trophy" item.
DEFINE_ACTION_FUNCTION INSTALL_ITEM
INT_VAR
  ach_count = 0 // number of tokens to add
  show_compact = 1
BEGIN
  ACTION_IF (ach_count > 0) BEGIN
    COPY ~%MOD_FOLDER%/items/a7achtr1.itm~ ~override~
      // generating item description
      PATCH_IF (show_compact) BEGIN
        TEXT_SPRINT ach_string ~â€“ ~
        TEXT_SPRINT nl ~~
      END ELSE BEGIN
        TEXT_SPRINT ach_string ~~
        TEXT_SPRINT nl ~%LNL%~
      END
      FOR (i = 0; i < ach_count; ++i) BEGIN
        TEXT_SPRINT ach_string ~%ach_string%<A7_ACH_%i%>%nl%~
      END
      PATCH_IF (show_compact) BEGIN
        TEXT_SPRINT ach_string ~%ach_string%%LNL%~
      END
      SET ach_count_total = ach_count
      PATCH_IF (GAME_IS ~pstee~) BEGIN
        SET strref1 = RESOLVE_STR_REF(@604)
        SET strref2 = RESOLVE_STR_REF(@605)
      END ELSE BEGIN
        SET strref1 = RESOLVE_STR_REF(@602)
        SET strref2 = RESOLVE_STR_REF(@603)
      END

      SAY NAME1 @600  // Achievements Trophy
      SAY NAME2 @600  // Achievements Trophy
      WRITE_LONG UNIDENTIFIED_DESC strref1
      WRITE_LONG IDENTIFIED_DESC strref2

      PATCH_IF (GAME_IS ~iwdee pstee~) BEGIN
        // description image not needed
        WRITE_ASCII 0x58 ~~ (8)
      END

    ACTION_IF (GAME_IS ~bgee~ && GAME_INCLUDES ~sod~) BEGIN
      COPY ~%MOD_FOLDER%/items/sod/a7cachtr.bam~ ~override~
    END ELSE ACTION_IF (NOT GAME_IS ~iwdee pstee~) BEGIN
      COPY ~%MOD_FOLDER%/items/a7cachtr.bam~ ~override~
    END

    ACTION_IF (GAME_INCLUDES ~pst~) BEGIN
      COPY ~%MOD_FOLDER%/items/pstee/a7iachtr.bam~ ~override~
    END ELSE BEGIN
      COPY ~%MOD_FOLDER%/items/a7iachtr.bam~ ~override~
    END

    // Adding trophy to stores
    ACTION_IF (GAME_INCLUDES ~bg1~) BEGIN
      COPY_EXISTING ~friend.sto~ ~override~
        LPF ADD_STORE_ITEM_EX
          STR_VAR
            item_name = ~a7achtr1~
            position  = ~LAST~
        END
      BUT_ONLY IF_EXISTS
    END

    ACTION_IF (GAME_INCLUDES ~sod~) BEGIN
      COPY_EXISTING ~bdbeleg4.sto~ ~override~
        LPF ADD_STORE_ITEM_EX
          STR_VAR
            item_name = ~a7achtr1~
            position  = ~LAST~
        END
      BUT_ONLY IF_EXISTS
    END

    ACTION_IF (GAME_INCLUDES ~bg2~) BEGIN
      COPY_EXISTING ~ribald.sto~ ~override~
        LPF ADD_STORE_ITEM_EX
          STR_VAR
            item_name = ~a7achtr1~
            position  = ~LAST~
        END
      BUT_ONLY IF_EXISTS
    END

    ACTION_IF (GAME_INCLUDES ~tob~) BEGIN
      COPY_EXISTING ~hgkar01.sto~ ~override~
        LPF ADD_STORE_ITEM_EX
          STR_VAR
            item_name = ~a7achtr1~
            position  = ~LAST~
        END
      BUT_ONLY IF_EXISTS
    END

    ACTION_IF (GAME_INCLUDES ~iwd~) BEGIN
      COPY_EXISTING ~kugerth.sto~ ~override~
        LPF ADD_STORE_ITEM_EX
          STR_VAR
            item_name = ~a7achtr1~
            position  = ~LAST~
        END
      BUT_ONLY IF_EXISTS
    END

    ACTION_IF (GAME_INCLUDES ~how~) BEGIN
<<<<<<<< .../inlined/A7-Achievements/iwdhow_store.baf
IF
  GlobalGT("Chapter","GLOBAL",6)
  Global("A7_ACH_TROPHY_STORE","MYAREA",0)
THEN
  RESPONSE #100
    SetGlobal("A7_ACH_TROPHY_STORE","MYAREA",1)
    AddStoreItem("kieran2","a7achtr1",1,0)
    Continue()
END
>>>>>>>>
      EXTEND_TOP ~AR9101.BCS~ ~.../inlined/A7-Achievements/iwdhow_store.baf~
    END

    ACTION_IF (GAME_INCLUDES ~pst~) BEGIN
      COPY_EXISTING ~fell.sto~ ~override~
        LPF ADD_STORE_ITEM_EX
          STR_VAR
            item_name = ~a7achtr1~
            position  = ~LAST~
            sale_trigger = ~GlobalGT("A7_ACH_COUNT","GLOBAL",0)~
        END
      BUT_ONLY IF_EXISTS
    END

  END
END


// Main routine for installing achievement journal entries
DEFINE_ACTION_FUNCTION INSTALL_ACHIEVEMENTS
INT_VAR
  show_compact = 1  // How to present achievements in trophy item?
                    // 0: list all achievements individually with current status
                    // 1: list only unlocked achievements
STR_VAR
  games = ~~ // list of space-separated games (bgee, sod, bg2ee, iwdee, pstee)
BEGIN
  // collecting achievement definitions
  LAF COLLECT_ACHIEVEMENTS STR_VAR games RET achievements journal_titles achievement_labels RET_ARRAY achievements journal_titles achievement_labels END

  ACTION_IF (achievements > 0) BEGIN
    OUTER_SET journal = 0
    OUTER_SPRINT quot_open @610
    OUTER_SPRINT quot_close @611
    ACTION_IF (GAME_IS ~pstee~) BEGIN
      OUTER_SPRINT ach_unlocked @614
      OUTER_SPRINT ach_locked @615
    END ELSE BEGIN
      OUTER_SPRINT ach_unlocked @612
      OUTER_SPRINT ach_locked @613
    END

    // Installing achievements script
    ACTION_IF (NOT FILE_EXISTS_IN_GAME ~a7-achv.bcs~) BEGIN
      COMPILE ~%MOD_FOLDER%/scripts/a7-achv.baf~
    END

    ACTION_PHP_EACH achievements AS ach_var => ach_strref BEGIN
      // ensure variable length doesn't exceed 32 characters
      LAF FORMAT_GLOBAL STR_VAR global = EVAL ~A7-%ach_var%~ game = ~~ RET ach_var_guard = global END

      // handling tokens
      OUTER_TEXT_SPRINT ach_token_name ~A7_ACH_%journal%~
      ACTION_GET_STRREF $achievement_labels(~%ach_var%~) label
      ACTION_IF (show_compact) BEGIN
        OUTER_SET ach_token_on_strref = RESOLVE_STR_REF(~%quot_open%%label%%quot_close% â€“ ~)
        OUTER_SET ach_token_off_strref = "-1"
      END ELSE BEGIN
        OUTER_SET ach_token_on_strref = RESOLVE_STR_REF(~%label%%ach_unlocked%~)
        OUTER_SET ach_token_off_strref = RESOLVE_STR_REF(~%label%%ach_locked%~)
      END

      ACTION_IF (GAME_IS ~pstee~) BEGIN
        EXTEND_TOP ~a7-achv.bcs~ ~%MOD_FOLDER%/scripts/a7-achv-block-pstee.baf~ EVAL
      END ELSE BEGIN
        EXTEND_TOP ~a7-achv.bcs~ ~%MOD_FOLDER%/scripts/a7-achv-block.baf~ EVAL
      END

      // processing journal entry
      OUTER_SET ach_title_strref = $journal_titles(~%ach_var%~)
      OUTER_SET $journal_title(~%journal%~) = ach_title_strref
      OUTER_SET $journal(~%journal%~) = ach_strref
      OUTER_SET journal += 1
    END

    // registering journal entries
    ACTION_IF (journal > 0) BEGIN
      OUTER_SET title_old = "-1"
      OUTER_TEXT_SPRINT command ~~
      
      OUTER_FOR (i = 0; i < journal; ++i) BEGIN
        OUTER_SET title_strref = $journal_title(~%i%~)
        ACTION_IF (title_strref != title_old) BEGIN
          // closing current journal entry
          ACTION_IF (NOT ~%command%~ STR_EQ ~~) BEGIN
            COPY - ~.../inlined/A7-Achievements/blank~ ~.../inlined/A7-Achievements/journal.tph~
            APPEND_OUTER - ~.../inlined/A7-Achievements/journal.tph~ ~%command%~
            REINCLUDE ~.../inlined/A7-Achievements/journal.tph~
            OUTER_TEXT_SPRINT command ~~
          END

          // starting new journal entry
          OUTER_SET title_old = title_strref
          OUTER_TEXT_SPRINT command ~ADD_JOURNAL TITLE (#%title_strref%)~
        END

        OUTER_SET strref = $journal(~%i%~)
        ACTION_IF (NOT VARIABLE_IS_SET $cache(~%title_strref%~ ~%strref%~)) BEGIN
          OUTER_SET $cache(~%title_strref%~ ~%strref%~) = 1
          OUTER_TEXT_SPRINT command ~%command% #%strref%~
        END
      END

      // closing current journal entry
      ACTION_IF (NOT ~%command%~ STR_EQ ~~) BEGIN
        COPY - ~.../inlined/A7-Achievements/blank~ ~.../inlined/A7-Achievements/journal.tph~
        APPEND_OUTER - ~.../inlined/A7-Achievements/journal.tph~ ~%command%~
        REINCLUDE ~.../inlined/A7-Achievements/journal.tph~
      END
    END

    // patching global game scripts
    LAF PATCH_GAME_SCRIPTS
      INT_VAR
        ach_count = journal
        prefer_achievements = GAME_IS ~pstee~
    END

    // adding journal triggers (PSTEE only)
    ACTION_IF (GAME_IS ~pstee~) BEGIN
      COPY_EXISTING ~bgee.lua~ ~override~
        PHP_EACH achievements AS ach_var => ach_strref BEGIN
          LPF FORMAT_GLOBAL STR_VAR global = EVAL ~A7-%ach_var%~ game = ~~ RET global END
          LPF ADD_JOURNAL_TRIGGER
            INT_VAR strref = ach_strref
            STR_VAR global
          END
        END
      BUT_ONLY IF_EXISTS
    END

    // installing item "Achievements Trophy"
    LAF INSTALL_ITEM
      INT_VAR
        ach_count = journal
        show_compact
    END
  END
END
